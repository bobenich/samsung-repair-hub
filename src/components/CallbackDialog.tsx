
import React, { useState } from 'react';
import { Dialog, DialogContent, DialogHeader, DialogTitle, DialogTrigger } from "@/components/ui/dialog";
import { Button } from "@/components/ui/button";
import { toast } from "sonner";
import { Input } from "@/components/ui/input";
import { Textarea } from "@/components/ui/textarea";
import { Phone } from 'lucide-react';

interface CallbackDialogProps {
  children: React.ReactNode;
  title?: string;
  buttonText?: string;
}

const CallbackDialog = ({ 
  children, 
  title = "–û—Å—Ç–∞–≤–∏—Ç—å –∑–∞—è–≤–∫—É –Ω–∞ —Ä–µ–º–æ–Ω—Ç", 
  buttonText = "–û—Ç–ø—Ä–∞–≤–∏—Ç—å –∑–∞—è–≤–∫—É" 
}: CallbackDialogProps) => {
  const [open, setOpen] = useState(false);
  const [formData, setFormData] = useState({
    name: '',
    phone: '',
    device: '',
    message: '',
  });
  const [isSubmitting, setIsSubmitting] = useState(false);

  const handleChange = (e: React.ChangeEvent<HTMLInputElement | HTMLTextAreaElement>) => {
    const { name, value } = e.target;
    setFormData(prev => ({ ...prev, [name]: value }));
  };

  const handleSubmit = async (e: React.FormEvent) => {
    e.preventDefault();
    setIsSubmitting(true);
    
    try {
      // Prepare message for Telegram
      const message = `
        üîî –ù–æ–≤–∞—è –∑–∞—è–≤–∫–∞ —Å —Å–∞–π—Ç–∞!
        
        –§–æ—Ä–º–∞: ${title}
        –ò–º—è: ${formData.name}
        –¢–µ–ª–µ—Ñ–æ–Ω: ${formData.phone}
        –£—Å—Ç—Ä–æ–π—Å—Ç–≤–æ: ${formData.device}
        –°–æ–æ–±—â–µ–Ω–∏–µ: ${formData.message}
      `;
      
      console.log('Sending to Telegram:', message);
      console.log('To chat ID: @golder_creator');
      
      // Also log Google Sheets integration for reference
      console.log('In real implementation, this would also be sent to Google Sheets');
      console.log('Google Sheets URL:', 'https://docs.google.com/spreadsheets/d/e/2PACX-1vToWL6wwIKGKmjLKnmyxSXrjeDH7qV-FgyIReKieab5tiMDRrXv_9FcijL5xp049H--rDpVoAzm3UmG/pubhtml?gid=0&single=true');
      
      // Simulate successful API call
      setTimeout(() => {
        toast.success('–ó–∞—è–≤–∫–∞ —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞! –ú—ã —Å–≤—è–∂–µ–º—Å—è —Å –≤–∞–º–∏ –≤ –±–ª–∏–∂–∞–π—à–µ–µ –≤—Ä–µ–º—è.');
        setFormData({ name: '', phone: '', device: '', message: '' });
        setIsSubmitting(false);
        setOpen(false);
      }, 1000);
    } catch (error) {
      console.error('–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Ñ–æ—Ä–º—ã:', error);
      toast.error('–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —Ñ–æ—Ä–º—ã. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑.');
      setIsSubmitting(false);
    }
  };

  return (
    <Dialog open={open} onOpenChange={setOpen}>
      <DialogTrigger asChild>
        {children}
      </DialogTrigger>
      <DialogContent className="sm:max-w-[425px]">
        <DialogHeader>
          <DialogTitle className="text-2xl font-semibold">{title}</DialogTitle>
        </DialogHeader>
        <form onSubmit={handleSubmit} className="space-y-4 py-4">
          <div className="space-y-2">
            <label htmlFor="name" className="text-sm font-medium">–í–∞—à–µ –∏–º—è</label>
            <Input
              id="name"
              name="name"
              value={formData.name}
              onChange={handleChange}
              placeholder="–ò–≤–∞–Ω –ò–≤–∞–Ω–æ–≤"
              required
            />
          </div>
          <div className="space-y-2">
            <label htmlFor="phone" className="text-sm font-medium">–¢–µ–ª–µ—Ñ–æ–Ω</label>
            <Input
              id="phone"
              name="phone"
              type="tel"
              value={formData.phone}
              onChange={handleChange}
              placeholder="+7 (XXX) XXX-XX-XX"
              required
            />
          </div>
          <div className="space-y-2">
            <label htmlFor="device" className="text-sm font-medium">–£—Å—Ç—Ä–æ–π—Å—Ç–≤–æ</label>
            <Input
              id="device"
              name="device"
              value={formData.device}
              onChange={handleChange}
              placeholder="Samsung Galaxy S21"
            />
          </div>
          <div className="space-y-2">
            <label htmlFor="message" className="text-sm font-medium">–û–ø–∏—à–∏—Ç–µ –ø—Ä–æ–±–ª–µ–º—É</label>
            <Textarea
              id="message"
              name="message"
              value={formData.message}
              onChange={handleChange}
              placeholder="–†–∞–∑–±–∏—Ç —ç–∫—Ä–∞–Ω, –Ω–µ –≤–∫–ª—é—á–∞–µ—Ç—Å—è –∏ —Ç.–¥."
              rows={3}
            />
          </div>
          <Button 
            type="submit" 
            className="w-full"
            disabled={isSubmitting}
          >
            {isSubmitting ? '–û—Ç–ø—Ä–∞–≤–∫–∞...' : buttonText}
          </Button>
          <p className="text-xs text-neutral-500 text-center mt-2">
            –ù–∞–∂–∏–º–∞—è –∫–Ω–æ–ø–∫—É, –≤—ã —Å–æ–≥–ª–∞—à–∞–µ—Ç–µ—Å—å —Å –ø–æ–ª–∏—Ç–∏–∫–æ–π –æ–±—Ä–∞–±–æ—Ç–∫–∏ –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö
          </p>
        </form>
      </DialogContent>
    </Dialog>
  );
};

export default CallbackDialog;
